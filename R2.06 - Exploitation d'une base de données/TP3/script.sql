drop table IF EXISTS CLIENT CASCADE;
drop table IF EXISTS CONDITIONSMETEO CASCADE;
drop table IF EXISTS DIFFICULTE CASCADE;
drop table IF EXISTS ITINERAIRE CASCADE;
drop table IF EXISTS ITINERAIRESORTIE CASCADE;
drop table IF EXISTS PARTICIPATION CASCADE;
drop table IF EXISTS SOMMET CASCADE;
drop table IF EXISTS SORTIE CASCADE;

/*==============================================================*/
/* Table : CLIENT                                               */
/*==============================================================*/
create table CLIENT (
   NUMCLIENT            INTEGER              not null,
   NOM                  VARCHAR(50)          not null,
   PRENOM               VARCHAR(50)          not null,
   RUE                  VARCHAR(200)         null,
   CP                   CHAR(5)              null,
   VILLE                VARCHAR(80)          null,
   DATENAISS            DATE                 null,
   TELFIXE              CHAR(10)             null,
   MAIL                 CHAR(100)            null,
   constraint PK_CLIENT primary key (NUMCLIENT)
);


/*==============================================================*/
/* Table : CONDITIONSMETEO                                      */
/*==============================================================*/
create table CONDITIONSMETEO (
   IDMETEO              INTEGER              not null,
   METEO                VARCHAR(20)          not null,
   constraint PK_CONDITIONSMETEO primary key (IDMETEO)
);


/*==============================================================*/
/* Table : DIFFICULTE                                           */
/*==============================================================*/
create table DIFFICULTE (
   CODEDIFFICULTE       CHAR(3)              not null,
   LIBELLEDIFFICULTE    VARCHAR(20)          not null,
   constraint PK_DIFFICULTE primary key (CODEDIFFICULTE)
);


/*==============================================================*/
/* Table : ITINERAIRE                                           */
/*==============================================================*/
create table ITINERAIRE (
   NUMITINERAIRE        INTEGER              not null,
   CODEDIFFICULTE       CHAR(3)              null,
   NUMSOMMET            INTEGER              not null,
   TITREITINERAIRE      VARCHAR(100)         not null,
   DENIVELE             INTEGER              not null,
   TEMPSTH              INTEGER              not null,
   ORIENTATION          CHAR(2)              null
      constraint CK_ORIENTATION_ITINERAIRE check (ORIENTATION is null or (ORIENTATION in ('E','N','S','O','SE','SO','NE','NO'))),
   constraint PK_ITINERAIRE primary key (NUMITINERAIRE)
);


/*==============================================================*/
/* Table : ITINERAIRESORTIE                                     */
/*==============================================================*/
create table ITINERAIRESORTIE (
   NUMSORTIE            INTEGER              not null,
   NUMITINERAIRE        INTEGER              not null,
   DUREEITINERAIRE      INTEGER              null,
   constraint PK_ITINERAIRESORTIE primary key (NUMSORTIE, NUMITINERAIRE)
);


/*==============================================================*/
/* Table : PARTICIPATION                                        */
/*==============================================================*/
create table PARTICIPATION (
   NUMCLIENT            INTEGER              not null,
   NUMSORTIE            INTEGER              not null,
   NOTE                 INTEGER              null
      constraint CK_NOTE_PARTICIPATION check (NOTE is null or NOTE between 1 and 5),
   constraint PK_PARTICIPATION primary key (NUMCLIENT, NUMSORTIE)
);


/*==============================================================*/
/* Table : SOMMET                                               */
/*==============================================================*/
create table SOMMET (
   NUMSOMMET            INTEGER              not null,
   NOMSOMMET            VARCHAR(50)          not null,
   ALTITUDE             INTEGER              not null
      constraint CK_ALTITUDE_SOMMET check (ALTITUDE between 1 and 4809),
   constraint PK_SOMMET primary key (NUMSOMMET)
);


/*==============================================================*/
/* Table : SORTIE                                               */
/*==============================================================*/
create table SORTIE (
   NUMSORTIE            INTEGER              not null,
   IDMETEO              INTEGER              null,
   DATESORTIE           DATE                 not null,
   constraint PK_SORTIE primary key (NUMSORTIE)
);


alter table ITINERAIRE
   add constraint FK_ITINERAIRE_SOMMET foreign key (NUMSOMMET)
      references SOMMET (NUMSOMMET)
      on delete restrict on update restrict;

alter table ITINERAIRE
   add constraint FK_ITINERAIRE_DIFFICULTE foreign key (CODEDIFFICULTE)
      references DIFFICULTE (CODEDIFFICULTE)
      on delete restrict on update restrict;

alter table ITINERAIRESORTIE
   add constraint FK_ITINERAIRESORTIE_SORTIE foreign key (NUMSORTIE)
      references SORTIE (NUMSORTIE)
      on delete restrict on update restrict;

alter table ITINERAIRESORTIE
   add constraint FK_ITINERAIRESORTIE_ITINERAIRE foreign key (NUMITINERAIRE)
      references ITINERAIRE (NUMITINERAIRE)
      on delete restrict on update restrict;

alter table PARTICIPATION
   add constraint FK_PARTICIPATION_CLIENT foreign key (NUMCLIENT)
      references CLIENT (NUMCLIENT)
      on delete restrict on update restrict;

alter table PARTICIPATION
   add constraint FK_PARTICIPATION_SORTIE foreign key (NUMSORTIE)
      references SORTIE (NUMSORTIE)
      on delete restrict on update restrict;

alter table SORTIE
   add constraint FK_SORTIE_CONDITIONSMETEO foreign key (IDMETEO)
      references CONDITIONSMETEO (IDMETEO)
      on delete restrict on update restrict;

-- Q4
Drop sequence IF EXISTS SEQ_CLIENT;
Create sequence SEQ_CLIENT start with 1000;

-- Q5
Alter table CLIENT add MOBILE char(10);
Alter table CLIENT add constraint CK_CLIENT_MOBILE check (MOBILE like '06%' or MOBILE like '07%' or MOBILE IS NULL);

-- Q6
Alter table SORTIE alter DATESORTIE SET default current_date;

-- Q7
-- Alter table PARTICIPATION drop constraint FK_PARTICIPATION_SORTIE;
-- Alter table PARTICIPATION add constraint FK_PARTICIPATION_SORTIE foreign key (NUMSORTIE) references SORTIE (NUMSORTIE) on delete cascade;

-- Q8
-- INSERT INTO CLIENT (NUMCLIENT, NOM, PRENOM, RUE, CP, VILLE, TELFIXE, MAIL, DATENAISS, MOBILE) VALUES (Nextval('SEQ_CLIENT'), 'GILLOT', 'Andr√©', 'rue des martyrs', '74000', 'Annecy', '0450487932', 'andre.guillot@gmail.com', to_date('1954-06-12', 'YYYY-MM-DD'), '0615487932');
-- INSERT INTO CLIENT (NUMCLIENT, NOM, PRENOM, RUE, CP, VILLE, TELFIXE, MAIL, DATENAISS, MOBILE) VALUES (Nextval('SEQ_CLIENT'), 'MARTIN', 'Laurent', 'allee de la renaissance', '69003', 'Villeurbanne', '0450030478', 'lmartin@outlook.fr', to_date('1980-11-04', 'YYYY-MM-DD'), '0656030478');

